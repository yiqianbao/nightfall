version: '3.5'

services:
  accounts:
    build:
      context: ./accounts
      dockerfile: Dockerfile
    restart: on-failure
    volumes:
      - ./accounts/src:/app/src
      - ./accounts/config:/app/config
      - ./accounts/.babelrc:/app/.babelrc
    environment:
      BLOCKCHAIN_HOST: ws://custom-geth
      BLOCKCHAIN_PORT: 8546
    depends_on:
      - custom-geth
    networks:
      - nightfall_network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - accounts
      - offchain
      - zkp
      - database
    volumes:
      - ./api-gateway/src:/app/src
      - ./api-gateway/config:/app/config
      - ./api-gateway/.babelrc:/app/.babelrc
    ports:
      - '8001:80'
    environment:
      ACCOUNTS_HOST: http://accounts
      ACCOUNTS_PORT: 80
      DATABASE_HOST: http://database
      DATABASE_PORT: 80
      OFFCHAIN_HOST: http://offchain
      OFFCHAIN_PORT: 80
      ZKP_HOST: http://zkp
      ZKP_PORT: 80
    networks:
      - nightfall_network

  offchain:
    build:
      context: ./offchain
      dockerfile: Dockerfile
    restart: on-failure
    volumes:
      - ./offchain/src:/app/src
      - ./offchain/build:/app/build
      - ./offchain/.babelrc:/app/.babelrc
      - ./offchain/__tests__:/app/__tests__
      - ./zkp-utils:/app/node_modules/zkp-utils
      - ./offchain/config:/app/config
    environment:
      AUTHENTICATION_API_HOST: http://api-gateway
      AUTHENTICATION_API_PORT: 80
      BLOCKCHAIN_HOST: ws://custom-geth
      BLOCKCHAIN_PORT: 8546
    depends_on:
      - custom-geth
    networks:
      - nightfall_network

  zkp:
    build:
      context: ./zkp
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - merkle-tree
    volumes:
      - ./zkp/src:/app/src
      - ./zkp/build:/app/build
      - ./zkp/code:/app/code
      - ./zkp/.babelrc:/app/.babelrc
      - ./zkp/__tests__:/app/__tests__
      - ./zkp/config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      BLOCKCHAIN_HOST: ws://custom-geth
      BLOCKCHAIN_PORT: 8546
      MERKLE_TREE_HOST: http://merkle-tree
      MERKLE_TREE_PORT: 80
      ZKP_CODE_VOLUME: nightfall_zkp-code-volume
      NIGHTLITE_LOG_LEVEL: debug
      ZKPScheme: ${ZKPScheme:-g16}
    networks:
      - nightfall_network

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    restart: on-failure
    volumes:
      - ./ui/src:/app/src
      - ./ui/angular.json:/app/angular.json
      - ./ui/tsconfig.json:/app/tsconfig.json
    ports:
      - '8000:80'
    networks:
      - nightfall_network

  mongo-nightfall:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=nightfall
    volumes:
      - ./database/docker-entrypoint-initdb.d/01_setup_admin_user.js:/docker-entrypoint-initdb.d/01_setup_admin_user.js
      - mongo-nightfall-volume:/data/db
    networks:
      - nightfall_network

  custom-geth:
    image: geth_yqb:v1.0
    restart: on-failure
    ports:
      - '8545:8545'
      - '8546:8546'
    networks:
      - nightfall_network

  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - mongo-nightfall
    volumes:
      - ./database/src:/app/src
      - ./database/.babelrc:/app/.babelrc
      - ./zkp-utils:/app/node_modules/zkp-utils
      - ./database/config:/app/config
      - ./database/setup-mongo-acl-for-new-users.js:/app/setup-mongo-acl-for-new-users.js
    networks:
      - nightfall_network

  truffle-offchain:
    image: ajmay/truffle:5.0.9
    environment:
      BLOCKCHAIN_HOST: ws://custom-geth
      BLOCKCHAIN_PORT: 8546
      SOLC_VERSION: 0.5.0
      ETH_HOST: custom-geth
      ETH_GAS: 6000000
      ETH_GAS_PRICE: 0
    depends_on:
      - custom-geth
    volumes:
      - ./offchain/contracts:/truffle/contracts:delegated
      - ./offchain/migrations/:/truffle/migrations:delegated
      - ./offchain/build/contracts/:/truffle/build/contracts:cached
      - ./offchain/test/:/truffle/test:delegated
      # - ./offchain/truffle-config.js:/truffle/truffle.js:delegated
    logging:
      options:
        max-size: 10m
    networks:
      - nightfall_network

  truffle-zkp:
    image: ajmay/truffle:5.0.9
    environment:
      BLOCKCHAIN_HOST: ws://custom-geth
      BLOCKCHAIN_PORT: 8546
      SOLC_VERSION: 0.5.0
      ETH_HOST: custom-geth
      ETH_GAS: 6000000
      ETH_GAS_PRICE: 0
      ZKPScheme: ${ZKPScheme:-g16}
    depends_on:
      - custom-geth
    volumes:
      - ./zkp/contracts/:/truffle/contracts:delegated
      - ./zkp/migrations/:/truffle/migrations:delegated
      - ./zkp/build/contracts/:/truffle/build/contracts:cached
      - ./zkp/test/:/truffle/test:delegated
      - ./zkp/src/:/truffle/src:delegated
      # - ./zkp/truffle.js:/truffle/truffle.js:delegated
    logging:
      options:
        max-size: 10m
    networks:
      - nightfall_network

  # The database storing the merkle tree
  mongo-merkle-tree:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=merkle_tree
    volumes:
      - ./database/docker-entrypoint-initdb.d/02_setup_admin_user.js:/docker-entrypoint-initdb.d/02_setup_admin_user.js
      - mongo-merkle-tree-volume:/data/db
    networks:
      - nightfall_network

  merkle-tree:
    image: timber_yqb:v1.0
    restart: on-failure
    depends_on:
      - mongo-merkle-tree
    volumes:
      - ./config/merkle-tree:/app/config # mount point might be different if configuring from another application
      - ./zkp/contracts/:/app/contracts:consistent # required if deploying contracts from within this service (if CONTRACT_LOCATION = 'default')
      - ./zkp/build/:/app/build:consistent # required if CONTRACT_LOCATION = 'default'
    ports:
      - "9000:80"
    environment:
      BLOCKCHAIN_HOST: ws://custom-geth
      BLOCKCHAIN_PORT: 8546
      CONTRACT_LOCATION: 'default' # Where to find the contractInstances?
      # Specify one of:
      # - 'remote' (to GET them from a remote microservice); or
      # - 'mongodb' (to get them from mongodb); or
      # - 'default' (to get them from the app/build/ folder)
      MONGO_HOST: mongodb://mongo-merkle-tree
      MONGO_PORT: 27017
      MONGO_NAME: merkle_tree
      MONGO_USERNAME: admin
      MONGO_PASSWORD: admin
    networks:
      - nightfall_network

volumes:
  mongo-nightfall-volume: {}
  mongo-merkle-tree-volume: {}
  zkp-code-volume:
    driver: local
    driver_opts:
      type: none
      device: $PWD/zkp/code/
      o: bind

networks:
  nightfall_network:
    external: true
