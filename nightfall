#!/bin/bash
set -e

GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

printf "${GREEN}*** Cleaning up all containers ***${NC}\n"
docker-compose -f docker-compose.yml down -v || {
	# this block will run if ```docker-compose down -v``` fails.
	sleep 3

	printf "${GREEN}*** Remove nightfall network ***${NC}\n"
  docker network rm nightfall_network

  printf "${GREEN}*** Remove nightfall's mongo volume ***${NC}\n"
  docker volume rm nightfall_mongo-nightfall-volume

  printf "${GREEN}*** Remove zkp-code volume ***${NC}\n"
  docker volume rm nightfall_zkp-code-volume

	printf "${GREEN}*** Remove merkle_tree network ***${NC}\n"
  docker network rm merkle_tree_network

	printf "${GREEN}*** Remove the merkle tree's mongo volume ***${NC}\n"
  docker volume rm nightfall_mongo-merkle-tree-volume
}

#printf "${GREEN}*** Pull zokrates docker image ***${NC}\n"
#docker pull zokrates/zokrates:0.5.1

printf "${GREEN}*** Installing zkp-util dependencies* ***${NC}\n"
pushd zkp-utils
  if [ ! -n "$(ls | grep node_modules)" ]
  then
      npm ci
  fi
popd

printf "${GREEN}*** genesis block init* ***${NC}\n"
pushd custom-geth
  #geth init
  ./init.sh
  #get geth images，if  not exits, then create
  if [ ! -n "$(docker images | grep geth_yqb)" ]
  then
    docker build -t geth_yqb:v1.0 .
  fi
popd

pushd timber
  #get timber images，if  not exits, then create
  if [ ! -n "$(docker images | grep timber_yqb)" ]
  then
    docker build -t timber_yqb:v1.0 .
  fi
popd

printf "${GREEN}*** Launching containerized geth ***${NC}\n"
docker-compose up  -d custom-geth

printf "${GREEN}*** Deploying all contracts ***${NC}\n"                               

docker-compose run --rm truffle-offchain migrate --reset --network=default
docker-compose run --rm truffle-zkp migrate --reset --network=default

printf "${GREEN}*** Launching containerized microservices ***${NC}\n"
docker-compose -f docker-compose.yml up --build
